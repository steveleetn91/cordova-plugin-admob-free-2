'use strict'; function _interopDefault(e) { return e && typeof e === 'object' && 'default' in e ? e.default : e }Object.defineProperty(exports, '__esModule', { value: !0 }); const exec$1 = _interopDefault(require('cordova/exec')); function ownKeys(t, e) { let n; const i = Object.keys(t); return Object.getOwnPropertySymbols && (n = Object.getOwnPropertySymbols(t), e && (n = n.filter(e => Object.getOwnPropertyDescriptor(t, e).enumerable)), i.push.apply(i, n)), i } function _objectSpread2(t) { for (let e = 1; e < arguments.length; e++) { var n = arguments[e] != null ? arguments[e] : {}; e % 2 ? ownKeys(new Object(n), !0).forEach(e => { _defineProperty(t, e, n[e]) }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(n)) : ownKeys(new Object(n)).forEach(e => { Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(n, e)) }) } return t } function _typeof(e) { return (_typeof = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? function (e) { return typeof e } : function (e) { return e && typeof Symbol === 'function' && e.constructor === Symbol && e !== Symbol.prototype ? 'symbol' : typeof e })(e) } function _classCallCheck(e, t) { if (!(e instanceof t)) throw new TypeError('Cannot call a class as a function') } function _defineProperties(e, t) { for (let n = 0; n < t.length; n++) { const i = t[n]; i.enumerable = i.enumerable || !1, i.configurable = !0, 'value' in i && (i.writable = !0), Object.defineProperty(e, _toPropertyKey(i.key), i) } } function _createClass(e, t, n) { return t && _defineProperties(e.prototype, t), n && _defineProperties(e, n), Object.defineProperty(e, 'prototype', { writable: !1 }), e } function _defineProperty(e, t, n) {
  return (t = _toPropertyKey(t)) in e ? Object.defineProperty(e, t, {
    value: n, enumerable: !0, configurable: !0, writable: !0,
  }) : e[t] = n, e
} function _toPrimitive(e, t) { if (typeof e !== 'object' || e === null) return e; let n = e[Symbol.toPrimitive]; if (void 0 === n) return (t === 'string' ? String : Number)(e); n = n.call(e, t || 'default'); if (typeof n !== 'object') return n; throw new TypeError('@@toPrimitive must return a primitive value.') } function _toPropertyKey(e) { e = _toPrimitive(e, 'string'); return typeof e === 'symbol' ? e : String(e) } function isUndefined(e) { return void 0 === e } function exec(n, i) { return new Promise(((e, t) => { exec$1(e, t, 'AdMob', n, i) })) } function isFunction(e) { return typeof e === 'function' } function isString(e) { return typeof e === 'string' } function wrapCallbacks(e, t, n) { return isFunction(t) && (e = e.then(t)), e = isFunction(n) ? e.catch(n) : e } function boolean2string(e) { return e === null ? '' : !0 === e ? 'yes' : !1 === e ? 'no' : e } function translateOptions(e) { const t = {}; return isUndefined(e.forChild) || (t.forChild = boolean2string(e.forChild), isString(e.forChild) && console.warn('`forChild` will not accept string in future, pass boolean instead')), isUndefined(e.forFamily) || (t.forFamily = boolean2string(e.forFamily), isString(e.forFamily) && console.warn('`forFamily` will not accept string in future, pass boolean instead')), _objectSpread2(_objectSpread2(_objectSpread2({}, e), t), {}, { adSize: e.size }) } function buildEvents(n, e) { return e.reduce((e, t) => e[t] = 'admob.'.concat(n, '.events.').concat(t), e, {}) } const events = buildEvents('banner', ['LOAD', 'LOAD_FAIL', 'OPEN', 'CLOSE', 'EXIT_APP']); const sizes = {
  BANNER: 'BANNER', IAB_BANNER: 'IAB_BANNER', IAB_LEADERBOARD: 'IAB_LEADERBOARD', IAB_MRECT: 'IAB_MRECT', LARGE_BANNER: 'LARGE_BANNER', SMART_BANNER: 'SMART_BANNER', FLUID: 'FLUID', FULL_BANNER: 'FULL_BANNER', LEADERBOARD: 'LEADERBOARD', MEDIUM_RECTANGLE: 'MEDIUM_RECTANGLE', SEARCH: 'SEARCH', WIDE_SKYSCRAPER: 'WIDE_SKYSCRAPER',
}; const Banner = (function () { function t(e) { _classCallCheck(this, t), this.config(_objectSpread2({ size: sizes.SMART_BANNER }, e)) } return _createClass(t, [{ key: 'config', value(e) { return this._config = _objectSpread2(_objectSpread2({}, this._config), e), this._config } }, { key: 'prepare', value() { const e = _objectSpread2({ publisherId: this._config.id }, this._config); return delete e.id, exec('createBannerView', [translateOptions(e)]) } }, { key: 'show', value() { return exec('showAd', [!0]) } }, { key: 'hide', value() { return exec('showAd', [!1]) } }, { key: 'remove', value() { return exec('destroyBannerView', []) } }]), t }()); const events$1 = (_defineProperty(Banner, 'events', events), _defineProperty(Banner, 'sizes', sizes), buildEvents('interstitial', ['LOAD', 'LOAD_FAIL', 'OPEN', 'CLOSE', 'EXIT_APP'])); const Interstitial = (function () { function t(e) { _classCallCheck(this, t), this.config(_objectSpread2({}, e)) } return _createClass(t, [{ key: 'config', value(e) { return this._config = _objectSpread2(_objectSpread2({}, this._config), e), this._config } }, { key: 'prepare', value() { const e = _objectSpread2({ interstitialAdId: this._config.id }, this._config); return delete e.id, exec('prepareInterstitial', [translateOptions(e)]) } }, { key: 'show', value() { return exec('showInterstitialAd', [!0]) } }, { key: 'isReady', value() { return exec('isInterstitialReady', []) } }]), t }()); const events$2 = (_defineProperty(Interstitial, 'events', events$1), buildEvents('rewardvideo', ['LOAD', 'LOAD_FAIL', 'OPEN', 'CLOSE', 'EXIT_APP', 'START', 'REWARD'])); const RewardVideo = (function () { function t(e) { _classCallCheck(this, t), this.config(_objectSpread2({}, e)) } return _createClass(t, [{ key: 'config', value(e) { return this._config = _objectSpread2(_objectSpread2({}, this._config), e), this._config } }, { key: 'prepare', value() { const e = _objectSpread2({ rewardVideoId: this._config.id }, this._config); return delete e.id, exec('createRewardVideo', [translateOptions(e)]) } }, { key: 'show', value() { return exec('showRewardVideo', [!0]) } }, { key: 'isReady', value() { return exec('isRewardVideoReady', []) } }]), t }()); const Banner$1 = (_defineProperty(RewardVideo, 'events', events$2), (function () { function e() { _classCallCheck(this, e) } return _createClass(e, [{ key: 'createBannerView', value() { exec$1(successCallback, failureCallback, 'CVDAdmobBanner', 'createBannerView', []) } }, { key: 'showAd', value() { exec$1(successCallback, failureCallback, 'CVDAdmobBanner', 'showAd', []) } }]), e }())); const Interstitial$1 = _createClass(function e() { _classCallCheck(this, e) }); const RewardVideo$1 = _createClass(function e() { _classCallCheck(this, e) }); const iosAdmob = {
  banner: new Banner$1(), interstitial: new Interstitial$1(), rewardvideo: new RewardVideo$1(), permission() { let e = ''; const t = cordova.plugins.CordovaSettings; return e = t.hasPermission('ios.permission.READ_ADVERTISING_IDENTIFIER') ? t.getString('ios.advertisingIdentifier') : e },
}; const ios = iosAdmob; const banner = new Banner(); const interstitial = new Interstitial(); const rewardvideo = new RewardVideo(); function setOptions(t, e, n) { _typeof(t) === 'object' ? (Object.keys(t).forEach(e => { switch (e) { case 'publisherId': banner._config.id = t[e]; break; case 'bannerAtTop': case 'overlap': case 'offsetTopBar': banner._config[e] = t[e]; break; case 'interstitialAdId': interstitial._config.id = t[e]; break; case 'rewardVideoId': rewardvideo._config.id = t[e]; break; case 'isTesting': case 'autoShow': banner._config[e] = t[e], interstitial._config[e] = t[e], rewardvideo._config[e] = t[e] } }), exec$1(e, n, 'AdMob', 'setOptions', [translateOptions(t)])) : typeof n === 'function' && n('options should be specified.') } const AD_SIZE = Banner.sizes; function createBannerView() { const e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; const t = arguments.length > 1 ? arguments[1] : void 0; const n = arguments.length > 2 ? arguments[2] : void 0; console.warn('Use admob.banner.prepare() instead.'), exec$1(t, n, 'AdMob', 'createBannerView', [translateOptions(e)]) } function destroyBannerView(e, t, n) { console.warn('Use admob.banner.remove() instead.'), exec$1(t, n, 'AdMob', 'destroyBannerView', []) } function showAd() { const e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]; const t = arguments.length > 1 ? arguments[1] : void 0; const n = arguments.length > 2 ? arguments[2] : void 0; console.warn('Use admob.banner.show() and admob.banner.hide() instead.'), exec$1(t, n, 'AdMob', 'showAd', [e]) } function createInterstitialView(e, t, n) { console.warn('Use admob.interstitial.prepare() instead, it will do both createInterstitialView() and requestInterstitialAd().'), exec$1(t, n, 'AdMob', 'createInterstitialView', [translateOptions(e)]) } function requestInterstitialAd() { const e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; const t = arguments.length > 1 ? arguments[1] : void 0; const n = arguments.length > 2 ? arguments[2] : void 0; console.warn('Use admob.interstitial.prepare() instead, it will do both createInterstitialView() and requestInterstitialAd().'), exec$1(t, n, 'AdMob', 'requestInterstitialAd', [translateOptions(e)]) } function prepareInterstitial() { const e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}; const t = arguments.length > 1 ? arguments[1] : void 0; const n = arguments.length > 2 ? arguments[2] : void 0; console.warn('Use admob.interstitial.prepare() instead.'), exec$1(t, n, 'AdMob', 'prepareInterstitial', [translateOptions(e)]) } function showInterstitial(e, t) { console.warn('Use admob.interstitial.show() instead.'), wrapCallbacks(interstitial.show(), e, t) } function showInterstitialAd() { const e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]; const t = arguments.length > 1 ? arguments[1] : void 0; const n = arguments.length > 2 ? arguments[2] : void 0; console.warn('Use admob.interstitial.show() instead.'), exec$1(t, n, 'AdMob', 'showInterstitialAd', [e]) }exports.AD_SIZE = AD_SIZE, exports.banner = banner, exports.createBannerView = createBannerView, exports.createInterstitialView = createInterstitialView, exports.destroyBannerView = destroyBannerView, exports.interstitial = interstitial, exports.ios = ios, exports.prepareInterstitial = prepareInterstitial, exports.requestInterstitialAd = requestInterstitialAd, exports.rewardvideo = rewardvideo, exports.setOptions = setOptions, exports.showAd = showAd, exports.showInterstitial = showInterstitial, exports.showInterstitialAd = showInterstitialAd
// # sourceMappingURL=admob.js.map
